<?php
/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö: –ï–§–†–°–ë, –†–ù–ü, –§–°–°–ü
 * Company Rating Checker - Test New Sources
 */

// –ü–æ–¥–∫–ª—é—á–∞–µ–º WordPress
require_once('../../../wp-config.php');

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å—ã
require_once('efrsb-api.php');
require_once('rnp-api.php');
require_once('fssp-api.php');

echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö\n";
echo "=====================================\n\n";

// –¢–µ—Å—Ç–æ–≤—ã–π –ò–ù–ù
$test_inn = '5260482041';

echo "üìã –¢–µ—Å—Ç–æ–≤—ã–π –ò–ù–ù: {$test_inn}\n\n";

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ï–§–†–°–ë API
echo "üèõÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ï–§–†–°–ë API:\n";
echo "------------------------\n";
try {
    $efrsb_api = new EFRSBAPI();
    $efrsb_data = $efrsb_api->get_bankruptcy_data($test_inn);
    
    if ($efrsb_data && !is_wp_error($efrsb_data)) {
        echo "‚úÖ –ï–§–†–°–ë –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ\n";
        echo "   –°—Ç–∞—Ç—É—Å –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞: " . ($efrsb_data['bankruptcy_status'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . "\n";
        echo "   –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: " . ($efrsb_data['bankruptcy_risk_level'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . "\n";
        echo "   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ª: " . count($efrsb_data['bankruptcy_cases'] ?? []) . "\n";
        echo "   –ò—Å—Ç–æ—á–Ω–∏–∫: " . ($efrsb_data['source'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . "\n";
        
        if (isset($efrsb_data['bankruptcy_cases']) && !empty($efrsb_data['bankruptcy_cases'])) {
            echo "   –î–µ—Ç–∞–ª–∏ –¥–µ–ª:\n";
            foreach ($efrsb_data['bankruptcy_cases'] as $case) {
                echo "     - " . $case['case_type_name'] . " (‚Ññ" . $case['case_number'] . ")\n";
            }
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        $recommendations = $efrsb_api->get_bankruptcy_recommendations($efrsb_data);
        echo "   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n";
        foreach ($recommendations as $rec) {
            echo "     - " . $rec . "\n";
        }
    } else {
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ï–§–†–°–ë\n";
        if (is_wp_error($efrsb_data)) {
            echo "   " . $efrsb_data->get_error_message() . "\n";
        }
    }
} catch (Exception $e) {
    echo "‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ï–§–†–°–ë: " . $e->getMessage() . "\n";
}
echo "\n";

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –†–ù–ü API
echo "üö´ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –†–ù–ü API:\n";
echo "----------------------\n";
try {
    $rnp_api = new RNPApi();
    $rnp_data = $rnp_api->get_dishonest_supplier_data($test_inn);
    
    if ($rnp_data && !is_wp_error($rnp_data)) {
        echo "‚úÖ –†–ù–ü –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ\n";
        echo "   –ù–µ–¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫: " . ($rnp_data['is_dishonest_supplier'] ? '–î–∞' : '–ù–µ—Ç') . "\n";
        echo "   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π: " . ($rnp_data['violation_count'] ?? 0) . "\n";
        echo "   –†–µ–ø—É—Ç–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: " . ($rnp_data['reputation_impact'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . "\n";
        echo "   –ò—Å—Ç–æ—á–Ω–∏–∫: " . ($rnp_data['source'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . "\n";
        
        if (isset($rnp_data['violations']) && !empty($rnp_data['violations'])) {
            echo "   –î–µ—Ç–∞–ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π:\n";
            foreach ($rnp_data['violations'] as $violation) {
                echo "     - " . $violation['description'] . " (—Ç—è–∂–µ—Å—Ç—å: " . $violation['severity'] . ")\n";
            }
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        $recommendations = $rnp_api->get_rnp_recommendations($rnp_data);
        echo "   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n";
        foreach ($recommendations as $rec) {
            echo "     - " . $rec . "\n";
        }
    } else {
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –†–ù–ü\n";
        if (is_wp_error($rnp_data)) {
            echo "   " . $rnp_data->get_error_message() . "\n";
        }
    }
} catch (Exception $e) {
    echo "‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –†–ù–ü: " . $e->getMessage() . "\n";
}
echo "\n";

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –§–°–°–ü API
echo "üíº –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –§–°–°–ü API:\n";
echo "------------------------\n";
try {
    $fssp_api = new FSSPApi();
    $fssp_data = $fssp_api->get_enforcement_data($test_inn);
    
    if ($fssp_data && !is_wp_error($fssp_data)) {
        echo "‚úÖ –§–°–°–ü –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ\n";
        echo "   –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: " . ($fssp_data['has_enforcement_proceedings'] ? '–ï—Å—Ç—å' : '–ù–µ—Ç') . "\n";
        echo "   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤: " . ($fssp_data['proceedings_count'] ?? 0) . "\n";
        echo "   –û–±—â–∞—è –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å: " . number_format($fssp_data['total_debt_amount'] ?? 0, 0, ',', ' ') . " —Ä—É–±.\n";
        echo "   –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ä–∏—Å–∫: " . ($fssp_data['financial_risk_level'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . "\n";
        echo "   –ò—Å—Ç–æ—á–Ω–∏–∫: " . ($fssp_data['source'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . "\n";
        
        if (isset($fssp_data['proceedings']) && !empty($fssp_data['proceedings'])) {
            echo "   –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤:\n";
            foreach ($fssp_data['proceedings'] as $proceeding) {
                echo "     - " . $proceeding['description'] . " (" . number_format($proceeding['debt_amount'], 0, ',', ' ') . " —Ä—É–±.)\n";
            }
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        $recommendations = $fssp_api->get_fssp_recommendations($fssp_data);
        echo "   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n";
        foreach ($recommendations as $rec) {
            echo "     - " . $rec . "\n";
        }
    } else {
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –§–°–°–ü\n";
        if (is_wp_error($fssp_data)) {
            echo "   " . $fssp_data->get_error_message() . "\n";
        }
    }
} catch (Exception $e) {
    echo "‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –§–°–°–ü: " . $e->getMessage() . "\n";
}
echo "\n";

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø–ª–∞–≥–∏–Ω–æ–º
echo "üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø–ª–∞–≥–∏–Ω–æ–º:\n";
echo "---------------------------------------------\n";

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –ø–ª–∞–≥–∏–Ω–∞
require_once('company-rating-checker.php');

try {
    $plugin = new CompanyRatingChecker();
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –º–µ—Ç–æ–¥–∞–º
    $reflection = new ReflectionClass($plugin);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥—ã –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    $get_efrsb_method = $reflection->getMethod('get_efrsb_data');
    $get_efrsb_method->setAccessible(true);
    $efrsb_result = $get_efrsb_method->invoke($plugin, $test_inn);
    
    $get_rnp_method = $reflection->getMethod('get_rnp_data');
    $get_rnp_method->setAccessible(true);
    $rnp_result = $get_rnp_method->invoke($plugin, $test_inn);
    
    $get_fssp_method = $reflection->getMethod('get_fssp_data');
    $get_fssp_method->setAccessible(true);
    $fssp_result = $get_fssp_method->invoke($plugin, $test_inn);
    
    echo "‚úÖ –ú–µ—Ç–æ–¥—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n";
    echo "   –ï–§–†–°–ë –¥–∞–Ω–Ω—ã–µ: " . ($efrsb_result ? '–ø–æ–ª—É—á–µ–Ω—ã' : '–Ω–µ –ø–æ–ª—É—á–µ–Ω—ã') . "\n";
    echo "   –†–ù–ü –¥–∞–Ω–Ω—ã–µ: " . ($rnp_result ? '–ø–æ–ª—É—á–µ–Ω—ã' : '–Ω–µ –ø–æ–ª—É—á–µ–Ω—ã') . "\n";
    echo "   –§–°–°–ü –¥–∞–Ω–Ω—ã–µ: " . ($fssp_result ? '–ø–æ–ª—É—á–µ–Ω—ã' : '–Ω–µ –ø–æ–ª—É—á–µ–Ω—ã') . "\n";
    
} catch (Exception $e) {
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: " . $e->getMessage() . "\n";
}
echo "\n";

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç –±–∞–ª–ª–æ–≤
echo "üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –±–∞–ª–ª–æ–≤:\n";
echo "------------------------------\n";

try {
    $plugin = new CompanyRatingChecker();
    $reflection = new ReflectionClass($plugin);
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
    $test_company_data = array(
        'efrsb' => $efrsb_data ?? null,
        'rnp' => $rnp_data ?? null,
        'fssp' => $fssp_data ?? null
    );
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ –ï–§–†–°–ë
    $calculate_efrsb_method = $reflection->getMethod('calculate_efrsb_score');
    $calculate_efrsb_method->setAccessible(true);
    $efrsb_score = $calculate_efrsb_method->invoke($plugin, $test_company_data);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ –†–ù–ü
    $calculate_rnp_method = $reflection->getMethod('calculate_rnp_score');
    $calculate_rnp_method->setAccessible(true);
    $rnp_score = $calculate_rnp_method->invoke($plugin, $test_company_data);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ –§–°–°–ü
    $calculate_fssp_method = $reflection->getMethod('calculate_fssp_score');
    $calculate_fssp_method->setAccessible(true);
    $fssp_score = $calculate_fssp_method->invoke($plugin, $test_company_data);
    
    echo "‚úÖ –†–∞—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n";
    echo "   –ï–§–†–°–ë –±–∞–ª–ª: {$efrsb_score}/20\n";
    echo "   –†–ù–ü –±–∞–ª–ª: {$rnp_score}/15\n";
    echo "   –§–°–°–ü –±–∞–ª–ª: {$fssp_score}/15\n";
    echo "   –û–±—â–∏–π –±–∞–ª–ª –Ω–æ–≤—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤: " . ($efrsb_score + $rnp_score + $fssp_score) . "/50\n";
    
} catch (Exception $e) {
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –±–∞–ª–ª–æ–≤: " . $e->getMessage() . "\n";
}
echo "\n";

echo "üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n";
echo "========================\n";
echo "–ù–æ–≤—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã:\n";
echo "- –ï–§–†–°–ë (20 –±–∞–ª–ª–æ–≤) - –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞\n";
echo "- –†–ù–ü (15 –±–∞–ª–ª–æ–≤) - –Ω–µ–¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏\n";
echo "- –§–°–°–ü (15 –±–∞–ª–ª–æ–≤) - –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞\n";
echo "\n–û–±—â–∏–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª —É–≤–µ–ª–∏—á–µ–Ω –Ω–∞ 50 –±–∞–ª–ª–æ–≤!\n";
?>
