<?php
/**
 * –¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ï–ì–†–Æ–õ API
 * Company Rating Checker - Test Improved EGRUL
 */

// –ü–æ–¥–∫–ª—é—á–∞–µ–º WordPress
require_once('../../../wp-config.php');

// –ü–æ–¥–∫–ª—é—á–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
require_once('egrul-api-improved.php');

echo "üîç –¢–ï–°–¢ –£–õ–£–ß–®–ï–ù–ù–û–ô –í–ï–†–°–ò–ò –ï–ì–†–Æ–õ API\n";
echo "====================================\n\n";

// –¢–µ—Å—Ç–æ–≤—ã–π –ò–ù–ù
$test_inn = '5260482041';

echo "üìã –ò–ù–ù –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {$test_inn}\n";
echo "‚è∞ –í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: " . date('Y-m-d H:i:s') . "\n\n";

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ï–ì–†–Æ–õ API
$egrul_api = new EGRULApiImproved();

echo "üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–õ–£–ß–®–ï–ù–ù–û–ô –í–ï–†–°–ò–ò...\n";
echo "=====================================\n\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
echo "üåê –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –ò–°–¢–û–ß–ù–ò–ö–û–í:\n";
echo "===================================\n";
$sources = $egrul_api->check_sources();
foreach ($sources as $source_key => $source_info) {
    $status = $source_info['available'] ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
    echo "   {$status} {$source_info['name']}\n";
    echo "      üîó URL: {$source_info['url']}\n";
}
echo "\n";

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
echo "üìä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–õ–£–ß–ï–ù–ò–Ø –î–ê–ù–ù–´–• –ï–ì–†–Æ–õ:\n";
echo "=======================================\n";

try {
    $egrul_data = $egrul_api->get_egrul_data($test_inn);
    
    if ($egrul_data && !is_wp_error($egrul_data)) {
        echo "‚úÖ –î–ê–ù–ù–´–ï –ï–ì–†–Æ–õ –ü–û–õ–£–ß–ï–ù–´ –£–°–ü–ï–®–ù–û!\n\n";
        
        // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        echo "üìã –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:\n";
        echo "=======================\n";
        echo "   üè¢ –ò–ù–ù: " . ($egrul_data['inn'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üìù –ù–∞–∑–≤–∞–Ω–∏–µ: " . ($egrul_data['name'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ') . "\n";
        echo "   üÜî –û–ì–†–ù: " . ($egrul_data['ogrn'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üèõÔ∏è –ö–ü–ü: " . ($egrul_data['kpp'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üìç –ê–¥—Ä–µ—Å: " . ($egrul_data['address'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üìä –°—Ç–∞—Ç—É—Å: " . ($egrul_data['status'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " . ($egrul_data['registration_date'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–∞') . "\n";
        echo "   üë§ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: " . ($egrul_data['manager'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üè≠ –û–ö–í–≠–î: " . ($egrul_data['okved'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üí∞ –£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: " . number_format($egrul_data['authorized_capital'] ?? 0, 0, ',', ' ') . " —Ä—É–±.\n";
        echo "   üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: " . ($egrul_data['last_updated'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ') . "\n";
        echo "   üîç –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: " . ($egrul_data['source'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üß† –≠–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑: " . (isset($egrul_data['heuristic_analysis']) && $egrul_data['heuristic_analysis'] ? '–î–ê' : '–ù–ï–¢') . "\n\n";
        
        // –§–∞–∫—Ç–æ—Ä—ã –∞–Ω–∞–ª–∏–∑–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if (isset($egrul_data['egrul_factors']) && !empty($egrul_data['egrul_factors'])) {
            echo "üîç –§–ê–ö–¢–û–†–´ –ê–ù–ê–õ–ò–ó–ê –ï–ì–†–Æ–õ:\n";
            echo "=========================\n";
            foreach ($egrul_data['egrul_factors'] as $factor) {
                echo "   üìä {$factor}\n";
            }
            echo "\n";
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö
        echo "üìà –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê –î–ê–ù–ù–´–•:\n";
        echo "==========================\n";
        $data_quality = $this->analyze_data_quality($egrul_data);
        echo "   üìä –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: {$data_quality['score']}/100\n";
        echo "   üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å: {$data_quality['completeness']}%\n";
        echo "   ‚úÖ –ü–æ–ª–Ω—ã—Ö –ø–æ–ª–µ–π: {$data_quality['complete_fields']}\n";
        echo "   ‚ùå –ü—É—Å—Ç—ã—Ö –ø–æ–ª–µ–π: {$data_quality['empty_fields']}\n\n";
        
    } else {
        echo "‚ùå –û–®–ò–ë–ö–ê –ü–û–õ–£–ß–ï–ù–ò–Ø –î–ê–ù–ù–´–• –ï–ì–†–Æ–õ\n";
        if (is_wp_error($egrul_data)) {
            echo "   –ö–æ–¥ –æ—à–∏–±–∫–∏: " . $egrul_data->get_error_code() . "\n";
            echo "   –°–æ–æ–±—â–µ–Ω–∏–µ: " . $egrul_data->get_error_message() . "\n";
        }
    }
    
} catch (Exception $e) {
    echo "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: " . $e->getMessage() . "\n";
    echo "   –§–∞–π–ª: " . $e->getFile() . "\n";
    echo "   –°—Ç—Ä–æ–∫–∞: " . $e->getLine() . "\n";
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—É—Å–∫–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
echo "üîÑ –¢–ï–°–¢ –ù–ê –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–¨ (5 –∑–∞–ø—É—Å–∫–æ–≤):\n";
echo "=====================================\n";
$consistent_results = true;
$first_result = null;

for ($i = 1; $i <= 5; $i++) {
    echo "   –ó–∞–ø—É—Å–∫ {$i}: ";
    
    try {
        $test_data = $egrul_api->get_egrul_data($test_inn);
        
        if ($test_data && !is_wp_error($test_data)) {
            $name = $test_data['name'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
            $status = $test_data['status'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω';
            $source = $test_data['source'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω';
            
            echo "–ù–∞–∑–≤–∞–Ω–∏–µ: {$name}, –°—Ç–∞—Ç—É—Å: {$status}, –ò—Å—Ç–æ—á–Ω–∏–∫: {$source}\n";
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å
            if ($i === 1) {
                $first_result = $test_data;
            } else {
                if ($first_result['name'] !== $test_data['name'] ||
                    $first_result['status'] !== $test_data['status']) {
                    $consistent_results = false;
                }
            }
        } else {
            echo "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö\n";
            $consistent_results = false;
        }
    } catch (Exception $e) {
        echo "–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: " . $e->getMessage() . "\n";
        $consistent_results = false;
    }
}

echo "\nüìà –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê –ù–ê –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–¨:\n";
echo "====================================\n";
if ($consistent_results) {
    echo "   ‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–¢–ê–ë–ò–õ–¨–ù–´ - API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n";
} else {
    echo "   ‚ö†Ô∏è –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ù–ï–°–¢–ê–ë–ò–õ–¨–ù–´ - —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n";
}

echo "\n‚è∞ –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∞: " . date('Y-m-d H:i:s') . "\n";
echo "üéØ –¢–ï–°–¢ –£–õ–£–ß–®–ï–ù–ù–û–ô –í–ï–†–°–ò–ò –ó–ê–í–ï–†–®–ï–ù!\n";
echo "====================================\n";

// –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö
function analyze_data_quality($data) {
    $required_fields = array('inn', 'name', 'ogrn', 'kpp', 'address', 'status', 'registration_date', 'manager', 'okved', 'authorized_capital');
    $complete_fields = 0;
    $empty_fields = 0;
    
    foreach ($required_fields as $field) {
        if (isset($data[$field]) && !empty($data[$field]) && $data[$field] !== '–ù–µ —É–∫–∞–∑–∞–Ω–æ' && $data[$field] !== '–ù–µ —É–∫–∞–∑–∞–Ω' && $data[$field] !== '–ù–µ —É–∫–∞–∑–∞–Ω–∞') {
            $complete_fields++;
        } else {
            $empty_fields++;
        }
    }
    
    $completeness = round(($complete_fields / count($required_fields)) * 100, 1);
    $score = $completeness;
    
    return array(
        'score' => $score,
        'completeness' => $completeness,
        'complete_fields' => $complete_fields,
        'empty_fields' => $empty_fields
    );
}
?>
