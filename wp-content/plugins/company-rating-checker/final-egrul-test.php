<?php
/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ï–ì–†–Æ–õ API
 * Company Rating Checker - Final EGRUL Integration Test
 */

// –ü–æ–¥–∫–ª—é—á–∞–µ–º WordPress
require_once('../../../wp-config.php');

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–ª–∞–≥–∏–Ω
require_once('company-rating-checker.php');

echo "üîç –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –£–õ–£–ß–®–ï–ù–ù–û–ì–û –ï–ì–†–Æ–õ API\n";
echo "==================================================\n\n";

// –¢–µ—Å—Ç–æ–≤—ã–π –ò–ù–ù
$test_inn = '5260482041';

echo "üìã –ò–ù–ù –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {$test_inn}\n";
echo "‚è∞ –í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: " . date('Y-m-d H:i:s') . "\n\n";

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–ª–∞–≥–∏–Ω–∞
$plugin = new CompanyRatingChecker();

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –º–µ—Ç–æ–¥–∞–º
$reflection = new ReflectionClass($plugin);

echo "üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò...\n";
echo "=============================\n\n";

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ get_egrul_data
echo "1Ô∏è‚É£ –¢–ï–°–¢ –ú–ï–¢–û–î–ê get_egrul_data:\n";
echo "------------------------------\n";
try {
    $get_egrul_data_method = $reflection->getMethod('get_egrul_data');
    $get_egrul_data_method->setAccessible(true);
    $egrul_data = $get_egrul_data_method->invoke($plugin, $test_inn);
    
    if ($egrul_data && !is_wp_error($egrul_data)) {
        echo "   ‚úÖ –î–∞–Ω–Ω—ã–µ –ï–ì–†–Æ–õ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ\n";
        echo "   üìù –ù–∞–∑–≤–∞–Ω–∏–µ: " . ($egrul_data['name'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ') . "\n";
        echo "   üÜî –û–ì–†–ù: " . ($egrul_data['ogrn'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üèõÔ∏è –ö–ü–ü: " . ($egrul_data['kpp'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üìç –ê–¥—Ä–µ—Å: " . ($egrul_data['address'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üìä –°—Ç–∞—Ç—É—Å: " . ($egrul_data['status'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " . ($egrul_data['registration_date'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–∞') . "\n";
        echo "   üë§ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: " . ($egrul_data['manager'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üè≠ –û–ö–í–≠–î: " . ($egrul_data['okved'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        echo "   üí∞ –£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: " . number_format($egrul_data['authorized_capital'] ?? 0, 0, ',', ' ') . " —Ä—É–±.\n";
        echo "   üîç –ò—Å—Ç–æ—á–Ω–∏–∫: " . ($egrul_data['source'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
    } else {
        echo "   ‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã\n";
    }
} catch (Exception $e) {
    echo "   ‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}
echo "\n";

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–º–ø–∞–Ω–∏–∏
echo "2Ô∏è‚É£ –¢–ï–°–¢ –ü–û–õ–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê –ö–û–ú–ü–ê–ù–ò–ò:\n";
echo "----------------------------------\n";
try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
    $company_data = array();
    
    // –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    $get_company_data_method = $reflection->getMethod('get_company_data');
    $get_company_data_method->setAccessible(true);
    $company_data['basic'] = $get_company_data_method->invoke($plugin, $test_inn);
    
    // –ü–æ–ª—É—á–∞–µ–º –ï–ì–†–Æ–õ –¥–∞–Ω–Ω—ã–µ
    $get_egrul_data_method = $reflection->getMethod('get_egrul_data');
    $get_egrul_data_method->setAccessible(true);
    $company_data['egrul'] = $get_egrul_data_method->invoke($plugin, $test_inn);
    
    // –ü–æ–ª—É—á–∞–µ–º –ú–°–ü –¥–∞–Ω–Ω—ã–µ
    $get_msp_data_method = $reflection->getMethod('get_msp_data');
    $get_msp_data_method->setAccessible(true);
    $company_data['msp'] = $get_msp_data_method->invoke($plugin, $test_inn);
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥
    $calculate_rating_method = $reflection->getMethod('calculate_company_rating');
    $calculate_rating_method->setAccessible(true);
    $rating_result = $calculate_rating_method->invoke($plugin, $company_data);
    
    if ($rating_result && isset($rating_result['factors']['status'])) {
        $status_factor = $rating_result['factors']['status'];
        echo "   ‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —á–µ—Ä–µ–∑ —Ä–∞—Å—á–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞\n";
        echo "   üìä –§–∞–∫—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞: {$status_factor['score']}/{$status_factor['max_score']}\n";
        echo "   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {$status_factor['description']}\n";
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ï–ì–†–Æ–õ
        if (isset($company_data['egrul'])) {
            $egrul_data = $company_data['egrul'];
            echo "   üìù –ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑ –ï–ì–†–Æ–õ: " . ($egrul_data['name'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ') . "\n";
            echo "   üìä –°—Ç–∞—Ç—É—Å –∏–∑ –ï–ì–†–Æ–õ: " . ($egrul_data['status'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
            echo "   üîç –ò—Å—Ç–æ—á–Ω–∏–∫ –ï–ì–†–Æ–õ: " . ($egrul_data['source'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω') . "\n";
        }
    } else {
        echo "   ‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã —á–µ—Ä–µ–∑ —Ä–∞—Å—á–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞\n";
    }
} catch (Exception $e) {
    echo "   ‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}
echo "\n";

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—É—Å–∫–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
echo "3Ô∏è‚É£ –¢–ï–°–¢ –ù–ê –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–¨ (3 –∑–∞–ø—É—Å–∫–∞):\n";
echo "------------------------------------\n";
$consistent_results = true;
$first_result = null;

for ($i = 1; $i <= 3; $i++) {
    echo "   –ó–∞–ø—É—Å–∫ {$i}: ";
    
    try {
        $get_egrul_data_method = $reflection->getMethod('get_egrul_data');
        $get_egrul_data_method->setAccessible(true);
        $test_data = $get_egrul_data_method->invoke($plugin, $test_inn);
        
        if ($test_data && !is_wp_error($test_data)) {
            $name = $test_data['name'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
            $status = $test_data['status'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω';
            $source = $test_data['source'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω';
            
            echo "–ù–∞–∑–≤–∞–Ω–∏–µ: {$name}, –°—Ç–∞—Ç—É—Å: {$status}, –ò—Å—Ç–æ—á–Ω–∏–∫: {$source}\n";
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å
            if ($i === 1) {
                $first_result = $test_data;
            } else {
                if ($first_result['name'] !== $test_data['name'] ||
                    $first_result['status'] !== $test_data['status']) {
                    $consistent_results = false;
                }
            }
        } else {
            echo "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö\n";
            $consistent_results = false;
        }
    } catch (Exception $e) {
        echo "–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: " . $e->getMessage() . "\n";
        $consistent_results = false;
    }
}

echo "\nüìà –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê –ù–ê –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–¨:\n";
echo "====================================\n";
if ($consistent_results) {
    echo "   ‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–¢–ê–ë–ò–õ–¨–ù–´ - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n";
} else {
    echo "   ‚ö†Ô∏è –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ù–ï–°–¢–ê–ë–ò–õ–¨–ù–´ - —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n";
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö
echo "\n4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê –î–ê–ù–ù–´–• –ï–ì–†–Æ–õ:\n";
echo "=================================\n";
try {
    $get_egrul_data_method = $reflection->getMethod('get_egrul_data');
    $get_egrul_data_method->setAccessible(true);
    $egrul_data = $get_egrul_data_method->invoke($plugin, $test_inn);
    
    if ($egrul_data && !is_wp_error($egrul_data)) {
        $data_quality = analyze_data_quality($egrul_data);
        echo "   üìä –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: {$data_quality['score']}/100\n";
        echo "   üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å: {$data_quality['completeness']}%\n";
        echo "   ‚úÖ –ü–æ–ª–Ω—ã—Ö –ø–æ–ª–µ–π: {$data_quality['complete_fields']}\n";
        echo "   ‚ùå –ü—É—Å—Ç—ã—Ö –ø–æ–ª–µ–π: {$data_quality['empty_fields']}\n";
        
        if ($data_quality['score'] >= 80) {
            echo "   üéØ –û–¢–õ–ò–ß–ù–û–ï –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö!\n";
        } elseif ($data_quality['score'] >= 60) {
            echo "   üëç –•–û–†–û–®–ï–ï –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö\n";
        } elseif ($data_quality['score'] >= 40) {
            echo "   ‚ö†Ô∏è –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û–ï –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö\n";
        } else {
            echo "   ‚ùå –ù–ò–ó–ö–û–ï –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö\n";
        }
    }
} catch (Exception $e) {
    echo "   ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞: " . $e->getMessage() . "\n";
}

echo "\n‚è∞ –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∞: " . date('Y-m-d H:i:s') . "\n";
echo "üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ó–ê–í–ï–†–®–ï–ù!\n";
echo "======================================\n";

// –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö
function analyze_data_quality($data) {
    $required_fields = array('inn', 'name', 'ogrn', 'kpp', 'address', 'status', 'registration_date', 'manager', 'okved', 'authorized_capital');
    $complete_fields = 0;
    $empty_fields = 0;
    
    foreach ($required_fields as $field) {
        if (isset($data[$field]) && !empty($data[$field]) && $data[$field] !== '–ù–µ —É–∫–∞–∑–∞–Ω–æ' && $data[$field] !== '–ù–µ —É–∫–∞–∑–∞–Ω' && $data[$field] !== '–ù–µ —É–∫–∞–∑–∞–Ω–∞') {
            $complete_fields++;
        } else {
            $empty_fields++;
        }
    }
    
    $completeness = round(($complete_fields / count($required_fields)) * 100, 1);
    $score = $completeness;
    
    return array(
        'score' => $score,
        'completeness' => $completeness,
        'complete_fields' => $complete_fields,
        'empty_fields' => $empty_fields
    );
}
?>
