<?php
/**
 * –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º WordPress
require_once('/var/www/bizfin_pro_r_usr/data/www/bizfin-pro.ru/wp-config.php');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞–≥–∏–Ω
require_once '/var/www/bizfin_pro_r_usr/data/www/bizfin-pro.ru/wp-content/plugins/company-rating-checker/company-rating-checker.php';

echo "<h2>üéØ –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞</h2>\n";

$plugin = new CompanyRatingChecker();
$test_inn = '5260482041';

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
$test_company_data = array(
    'name' => array('full' => '–û–û–û "–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è"'),
    'inn' => $test_inn,
    'ogrn' => '1234567890123',
    'state' => array(
        'status' => 'ACTIVE',
        'registration_date' => 1262304000000 // 2010-01-01
    ),
    'capital' => array('value' => 10000000),
    'employee_count' => 50,
    'okved' => '62.01',
    'address' => array(
        'value' => '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1',
        'data' => array('region' => '–ú–æ—Å–∫–≤–∞')
    )
);

echo "<h3>1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:</h3>\n";
try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –º–µ—Ç–æ–¥—É
    $reflection = new ReflectionClass($plugin);
    $arbitration_method = $reflection->getMethod('get_arbitration_data');
    $arbitration_method->setAccessible(true);
    
    $arbitration_data = $arbitration_method->invoke($plugin, $test_inn);
    if ($arbitration_data) {
        echo "<p style='color: green;'>‚úÖ –ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã</p>\n";
        echo "<p>–î–∞–Ω–Ω—ã–µ: " . json_encode($arbitration_data, JSON_UNESCAPED_UNICODE) . "</p>\n";
        $test_company_data['arbitration'] = $arbitration_data;
    } else {
        echo "<p style='color: red;'>‚ùå –ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã</p>\n";
    }
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: " . $e->getMessage() . "</p>\n";
}

echo "<h3>2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–∫—É–ø–∫–∞—Ö:</h3>\n";
try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –º–µ—Ç–æ–¥—É
    $zakupki_method = $reflection->getMethod('get_zakupki_data');
    $zakupki_method->setAccessible(true);
    
    $zakupki_data = $zakupki_method->invoke($plugin, $test_inn);
    if ($zakupki_data) {
        echo "<p style='color: green;'>‚úÖ –î–∞–Ω–Ω—ã–µ –æ –∑–∞–∫—É–ø–∫–∞—Ö –ø–æ–ª—É—á–µ–Ω—ã</p>\n";
        echo "<p>–î–∞–Ω–Ω—ã–µ: " . json_encode($zakupki_data, JSON_UNESCAPED_UNICODE) . "</p>\n";
        $test_company_data['zakupki'] = $zakupki_data;
    } else {
        echo "<p style='color: red;'>‚ùå –î–∞–Ω–Ω—ã–µ –æ –∑–∞–∫—É–ø–∫–∞—Ö –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã</p>\n";
    }
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–∫—É–ø–∫–∞—Ö: " . $e->getMessage() . "</p>\n";
}

echo "<h3>3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞:</h3>\n";
try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –º–µ—Ç–æ–¥—É
    $reflection = new ReflectionClass($plugin);
    $method = $reflection->getMethod('calculate_company_rating');
    $method->setAccessible(true);
    
    $rating = $method->invoke($plugin, $test_company_data);
    
    echo "<p style='color: green;'>‚úÖ –†–∞—Å—á–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω</p>\n";
    echo "<p><strong>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª:</strong> {$rating['max_score']}</p>\n";
    echo "<p><strong>–û–±—â–∏–π –±–∞–ª–ª:</strong> {$rating['total_score']}</p>\n";
    echo "<p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–∫—Ç–æ—Ä–æ–≤:</strong> " . count($rating['factors']) . "</p>\n";
    
    echo "<h4>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤:</h4>\n";
    echo "<ul>\n";
    foreach ($rating['factors'] as $key => $factor) {
        $is_new = in_array($key, ['arbitration', 'zakupki']);
        $new_badge = $is_new ? ' <span style="background: #007cba; color: white; padding: 2px 6px; border-radius: 3px; font-size: 10px;">–ù–û–í–´–ô</span>' : '';
        echo "<li><strong>{$factor['name']}</strong>{$new_badge}: {$factor['score']}/{$factor['max_score']} - {$factor['description']}</li>\n";
    }
    echo "</ul>\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã
    if (isset($rating['factors']['arbitration'])) {
        echo "<p style='color: green;'>‚úÖ –§–∞–∫—Ç–æ—Ä '–ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–µ —Ä–∏—Å–∫–∏' –Ω–∞–π–¥–µ–Ω</p>\n";
    } else {
        echo "<p style='color: red;'>‚ùå –§–∞–∫—Ç–æ—Ä '–ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–µ —Ä–∏—Å–∫–∏' –ù–ï –Ω–∞–π–¥–µ–Ω</p>\n";
    }
    
    if (isset($rating['factors']['zakupki'])) {
        echo "<p style='color: green;'>‚úÖ –§–∞–∫—Ç–æ—Ä '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏' –Ω–∞–π–¥–µ–Ω</p>\n";
    } else {
        echo "<p style='color: red;'>‚ùå –§–∞–∫—Ç–æ—Ä '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏' –ù–ï –Ω–∞–π–¥–µ–Ω</p>\n";
    }
    
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞: " . $e->getMessage() . "</p>\n";
    echo "<p>–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:</p>\n";
    echo "<pre>" . $e->getTraceAsString() . "</pre>\n";
}

echo "<h3>4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ —Ñ–∞–π–ª–∞:</h3>\n";
$file_time = filemtime('/var/www/bizfin_pro_r_usr/data/www/bizfin-pro.ru/wp-content/plugins/company-rating-checker/company-rating-checker.php');
echo "<p>–í—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞: " . date('Y-m-d H:i:s', $file_time) . "</p>\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
$file_content = file_get_contents('/var/www/bizfin_pro_r_usr/data/www/bizfin-pro.ru/wp-content/plugins/company-rating-checker/company-rating-checker.php');
if (strpos($file_content, 'calculate_arbitration_score') !== false) {
    echo "<p style='color: green;'>‚úÖ –ú–µ—Ç–æ–¥ calculate_arbitration_score –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ</p>\n";
} else {
    echo "<p style='color: red;'>‚ùå –ú–µ—Ç–æ–¥ calculate_arbitration_score –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ</p>\n";
}

if (strpos($file_content, 'calculate_zakupki_score') !== false) {
    echo "<p style='color: green;'>‚úÖ –ú–µ—Ç–æ–¥ calculate_zakupki_score –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ</p>\n";
} else {
    echo "<p style='color: red;'>‚ùå –ú–µ—Ç–æ–¥ calculate_zakupki_score –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ</p>\n";
}

if (strpos($file_content, 'max_score = 120') !== false) {
    echo "<p style='color: green;'>‚úÖ max_score = 120 –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ</p>\n";
} else {
    echo "<p style='color: red;'>‚ùå max_score = 120 –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ</p>\n";
}
?>
