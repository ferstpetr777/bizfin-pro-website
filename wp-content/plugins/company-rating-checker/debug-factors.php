<?php
/**
 * –û—Ç–ª–∞–¥–∫–∞ –Ω–æ–≤—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º WordPress
require_once('/var/www/bizfin_pro_r_usr/data/www/bizfin-pro.ru/wp-config.php');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞–≥–∏–Ω
require_once '/var/www/bizfin_pro_r_usr/data/www/bizfin-pro.ru/wp-content/plugins/company-rating-checker/company-rating-checker.php';

echo "<h2>üîç –û—Ç–ª–∞–¥–∫–∞ –Ω–æ–≤—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤</h2>\n";

$plugin = new CompanyRatingChecker();
$test_inn = '5260482041';

// –ò–º–∏—Ç–∏—Ä—É–µ–º POST –∑–∞–ø—Ä–æ—Å
$_POST['inn'] = $test_inn;
$_POST['nonce'] = wp_create_nonce('crc_nonce');

echo "<h3>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –æ—Ç–ª–∞–¥–∫–æ–π:</h3>\n";

// –í–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
error_reporting(E_ALL);
ini_set('display_errors', 1);

// –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥
ob_start();
try {
    $plugin->ajax_get_company_rating();
    $output = ob_get_clean();
    
    $data = json_decode($output, true);
    
    if ($data && isset($data['success']) && $data['success']) {
        $rating = $data['data']['rating'];
        
        echo "<p><strong>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª:</strong> {$rating['max_score']}</p>\n";
        echo "<p><strong>–û–±—â–∏–π –±–∞–ª–ª:</strong> {$rating['total_score']}</p>\n";
        echo "<p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–∫—Ç–æ—Ä–æ–≤:</strong> " . count($rating['factors']) . "</p>\n";
        
        echo "<h4>–°–ø–∏—Å–æ–∫ —Ñ–∞–∫—Ç–æ—Ä–æ–≤:</h4>\n";
        echo "<ul>\n";
        foreach ($rating['factors'] as $key => $factor) {
            echo "<li><strong>{$factor['name']}</strong>: {$factor['score']}/{$factor['max_score']}</li>\n";
        }
        echo "</ul>\n";
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã
        if (isset($rating['factors']['arbitration'])) {
            echo "<p style='color: green;'>‚úÖ –§–∞–∫—Ç–æ—Ä '–ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–µ —Ä–∏—Å–∫–∏' –Ω–∞–π–¥–µ–Ω</p>\n";
        } else {
            echo "<p style='color: red;'>‚ùå –§–∞–∫—Ç–æ—Ä '–ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–µ —Ä–∏—Å–∫–∏' –ù–ï –Ω–∞–π–¥–µ–Ω</p>\n";
        }
        
        if (isset($rating['factors']['zakupki'])) {
            echo "<p style='color: green;'>‚úÖ –§–∞–∫—Ç–æ—Ä '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏' –Ω–∞–π–¥–µ–Ω</p>\n";
        } else {
            echo "<p style='color: red;'>‚ùå –§–∞–∫—Ç–æ—Ä '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏' –ù–ï –Ω–∞–π–¥–µ–Ω</p>\n";
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
        $company = $data['data']['company'];
        if (isset($company['arbitration'])) {
            echo "<p style='color: green;'>‚úÖ –ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–∞–π–¥–µ–Ω—ã</p>\n";
        } else {
            echo "<p style='color: red;'>‚ùå –ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –ù–ï –Ω–∞–π–¥–µ–Ω—ã</p>\n";
        }
        
        if (isset($company['zakupki'])) {
            echo "<p style='color: green;'>‚úÖ –î–∞–Ω–Ω—ã–µ –æ –∑–∞–∫—É–ø–∫–∞—Ö –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–∞–π–¥–µ–Ω—ã</p>\n";
        } else {
            echo "<p style='color: red;'>‚ùå –î–∞–Ω–Ω—ã–µ –æ –∑–∞–∫—É–ø–∫–∞—Ö –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –ù–ï –Ω–∞–π–¥–µ–Ω—ã</p>\n";
        }
        
    } else {
        echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ</p>\n";
        echo "<pre>" . htmlspecialchars($output) . "</pre>\n";
    }
    
} catch (Exception $e) {
    ob_end_clean();
    echo "<p style='color: red;'>‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: " . $e->getMessage() . "</p>\n";
    echo "<p>–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:</p>\n";
    echo "<pre>" . $e->getTraceAsString() . "</pre>\n";
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã –Ω–∞–ø—Ä—è–º—É—é
echo "<h3>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –Ω–∞–ø—Ä—è–º—É—é:</h3>\n";

try {
    $arbitration_api = new SimpleArbitrationAPI();
    $arbitration_data = $arbitration_api->get_arbitration_info($test_inn);
    echo "<p style='color: green;'>‚úÖ SimpleArbitrationAPI —Ä–∞–±–æ—Ç–∞–µ—Ç</p>\n";
    echo "<p>–î–∞–Ω–Ω—ã–µ: " . json_encode($arbitration_data, JSON_UNESCAPED_UNICODE) . "</p>\n";
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ SimpleArbitrationAPI: " . $e->getMessage() . "</p>\n";
}

try {
    $zakupki_api = new ZakupkiAPI();
    $zakupki_data = $zakupki_api->get_zakupki_info($test_inn);
    echo "<p style='color: green;'>‚úÖ ZakupkiAPI —Ä–∞–±–æ—Ç–∞–µ—Ç</p>\n";
    echo "<p>–î–∞–Ω–Ω—ã–µ: " . json_encode($zakupki_data, JSON_UNESCAPED_UNICODE) . "</p>\n";
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ ZakupkiAPI: " . $e->getMessage() . "</p>\n";
}
?>
