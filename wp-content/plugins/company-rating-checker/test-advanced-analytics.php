<?php
/**
 * –¢–µ—Å—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
 * Company Rating Checker - Advanced Analytics Test
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º WordPress
require_once('/var/www/bizfin_pro_r_usr/data/www/bizfin-pro.ru/wp-config.php');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞–≥–∏–Ω
require_once '/var/www/bizfin_pro_r_usr/data/www/bizfin-pro.ru/wp-content/plugins/company-rating-checker/company-rating-checker.php';

echo "<h2>üß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏</h2>\n";

$test_inn = '5260482041';

echo "<h3>1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ AdvancedAnalytics:</h3>\n";

try {
    $analytics = new AdvancedAnalytics();
    echo "<p style='color: green;'>‚úÖ –ö–ª–∞—Å—Å AdvancedAnalytics –∑–∞–≥—Ä—É–∂–µ–Ω</p>\n";
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
    $test_company_data = array(
        'name' => array('full' => '–û–û–û "–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è"'),
        'inn' => $test_inn,
        'state' => array(
            'status' => 'ACTIVE',
            'registration_date' => 1262304000000 // 2010-01-01
        ),
        'management' => array(
            'name' => '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
            'start_date' => 1262304000000
        ),
        'fns' => array(
            'revenue' => 50000000,
            'profit' => 5000000,
            'profitability' => 10,
            'debt_ratio' => 25,
            'bankruptcy_risk' => 'low'
        ),
        'rosstat' => array(
            'region' => array(
                'region_name' => '–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
                'statistical_rating' => 0.7
            ),
            'sector' => array(
                'sector_name' => '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è',
                'sector_rating' => 0.9,
                'growth' => array(
                    'annual_growth' => 0.15
                ),
                'market' => array(
                    'competition_level' => 0.7,
                    'barriers_to_entry' => 0.4
                )
            ),
            'enterprise_size' => array(
                'size_category' => 'medium',
                'estimated_employees' => 50
            ),
            'employment' => array(
                'employment_stability' => 0.8
            )
        ),
        'arbitration' => array(
            'risk_level' => 'low'
        ),
        'zakupki' => array(
            'summary' => array(
                'reputation_level' => 'good'
            )
        )
    );
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    $analysis = $analytics->comprehensive_analysis($test_company_data);
    
    if ($analysis) {
        echo "<p style='color: green;'>‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω</p>\n";
        
        echo "<h4>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:</h4>\n";
        echo "<p><strong>–û–±—â–∏–π –±–∞–ª–ª:</strong> " . round($analysis['overall_score'], 1) . "/100</p>\n";
        
        // –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ
        echo "<h4>üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ:</h4>\n";
        echo "<p><strong>–ë–∞–ª–ª:</strong> {$analysis['financial_health']['score']}/{$analysis['financial_health']['max_score']} ({$analysis['financial_health']['level']})</p>\n";
        echo "<ul>\n";
        foreach ($analysis['financial_health']['factors'] as $factor) {
            echo "<li>" . htmlspecialchars($factor) . "</li>\n";
        }
        echo "</ul>\n";
        
        // –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        echo "<h4>‚öôÔ∏è –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</h4>\n";
        echo "<p><strong>–ë–∞–ª–ª:</strong> {$analysis['operational_efficiency']['score']}/{$analysis['operational_efficiency']['max_score']} ({$analysis['operational_efficiency']['level']})</p>\n";
        echo "<ul>\n";
        foreach ($analysis['operational_efficiency']['factors'] as $factor) {
            echo "<li>" . htmlspecialchars($factor) . "</li>\n";
        }
        echo "</ul>\n";
        
        // –†—ã–Ω–æ—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
        echo "<h4>üìà –†—ã–Ω–æ—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è:</h4>\n";
        echo "<p><strong>–ë–∞–ª–ª:</strong> {$analysis['market_position']['score']}/{$analysis['market_position']['max_score']} ({$analysis['market_position']['level']})</p>\n";
        echo "<ul>\n";
        foreach ($analysis['market_position']['factors'] as $factor) {
            echo "<li>" . htmlspecialchars($factor) . "</li>\n";
        }
        echo "</ul>\n";
        
        // –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤
        echo "<h4>‚ö†Ô∏è –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤:</h4>\n";
        echo "<p><strong>–û–±—â–∏–π —Ä–∏—Å–∫:</strong> " . round($analysis['risk_assessment']['total_risk'] * 100, 1) . "% ({$analysis['risk_assessment']['risk_level']})</p>\n";
        echo "<p><strong>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏:</strong></p>\n";
        echo "<ul>\n";
        foreach ($analysis['risk_assessment']['individual_risks'] as $risk_type => $risk_score) {
            $risk_name = ucfirst(str_replace('_', ' ', $risk_type));
            echo "<li>{$risk_name}: " . round($risk_score * 100, 1) . "%</li>\n";
        }
        echo "</ul>\n";
        
        if (!empty($analysis['risk_assessment']['recommendations'])) {
            echo "<p><strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∏—Å–∫–∞–º:</strong></p>\n";
            echo "<ul>\n";
            foreach ($analysis['risk_assessment']['recommendations'] as $recommendation) {
                echo "<li>" . htmlspecialchars($recommendation) . "</li>\n";
            }
            echo "</ul>\n";
        }
        
        // –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞
        echo "<h4>üöÄ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞:</h4>\n";
        echo "<p><strong>–ë–∞–ª–ª:</strong> {$analysis['growth_potential']['score']}/{$analysis['growth_potential']['max_score']} ({$analysis['growth_potential']['level']})</p>\n";
        echo "<ul>\n";
        foreach ($analysis['growth_potential']['factors'] as $factor) {
            echo "<li>" . htmlspecialchars($factor) . "</li>\n";
        }
        echo "</ul>\n";
        
        // –£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å
        echo "<h4>üèóÔ∏è –£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å:</h4>\n";
        echo "<p><strong>–ë–∞–ª–ª:</strong> {$analysis['sustainability']['score']}/{$analysis['sustainability']['max_score']} ({$analysis['sustainability']['level']})</p>\n";
        echo "<ul>\n";
        foreach ($analysis['sustainability']['factors'] as $factor) {
            echo "<li>" . htmlspecialchars($factor) . "</li>\n";
        }
        echo "</ul>\n";
        
        // –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if (!empty($analysis['recommendations'])) {
            echo "<h4>üí° –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>\n";
            echo "<ul>\n";
            foreach ($analysis['recommendations'] as $recommendation) {
                echo "<li>" . htmlspecialchars($recommendation) . "</li>\n";
            }
            echo "</ul>\n";
        }
        
    } else {
        echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞</p>\n";
    }
    
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: " . $e->getMessage() . "</p>\n";
    echo "<p>–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:</p>\n";
    echo "<pre>" . $e->getTraceAsString() . "</pre>\n";
}

echo "<h3>2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø–ª–∞–≥–∏–Ω–æ–º:</h3>\n";

$plugin = new CompanyRatingChecker();

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
$reflection = new ReflectionClass($plugin);

try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    $analytics_method = $reflection->getMethod('get_advanced_analytics');
    $analytics_method->setAccessible(true);
    $analytics_result = $analytics_method->invoke($plugin, $test_company_data);
    
    if ($analytics_result) {
        echo "<p style='color: green;'>‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç</p>\n";
        echo "<p><strong>–û–±—â–∏–π –±–∞–ª–ª –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:</strong> " . round($analytics_result['overall_score'], 1) . "/100</p>\n";
    } else {
        echo "<p style='color: orange;'>‚ö†Ô∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ, –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö)</p>\n";
    }
    
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: " . $e->getMessage() . "</p>\n";
}

echo "<h3>3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π:</h3>\n";

try {
    // –í–∫–ª—é—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    update_option('crc_advanced_analytics_enabled', 1);
    
    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    $full_test_data = array(
        'name' => array('full' => '–û–û–û "–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è"'),
        'inn' => $test_inn,
        'state' => array('status' => 'ACTIVE'),
        'fns' => $test_company_data['fns'],
        'rosstat' => $test_company_data['rosstat'],
        'arbitration' => $test_company_data['arbitration'],
        'zakupki' => $test_company_data['zakupki']
    );
    
    $rating_method = $reflection->getMethod('calculate_company_rating');
    $rating_method->setAccessible(true);
    $rating = $rating_method->invoke($plugin, $full_test_data);
    
    echo "<p><strong>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª:</strong> {$rating['max_score']}</p>\n";
    echo "<p><strong>–û–±—â–∏–π –±–∞–ª–ª:</strong> {$rating['total_score']}</p>\n";
    echo "<p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–∫—Ç–æ—Ä–æ–≤:</strong> " . count($rating['factors']) . "</p>\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    if (isset($rating['advanced_analytics']) && $rating['advanced_analytics']) {
        echo "<p style='color: green;'>‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</p>\n";
        echo "<p><strong>–ë–∞–ª–ª –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:</strong> " . round($rating['advanced_analytics']['overall_score'], 1) . "/100</p>\n";
        
        if (!empty($rating['advanced_analytics']['recommendations'])) {
            echo "<p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:</strong> " . count($rating['advanced_analytics']['recommendations']) . "</p>\n";
        }
    } else {
        echo "<p style='color: red;'>‚ùå –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–µ –≤–∫–ª—é—á–µ–Ω–∞ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</p>\n";
    }
    
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞: " . $e->getMessage() . "</p>\n";
}

echo "<h3>4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:</h3>\n";

// –¢–µ—Å—Ç 1: –ö–æ–º–ø–∞–Ω–∏—è —Å –≤—ã—Å–æ–∫–∏–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏
echo "<h4>–°—Ü–µ–Ω–∞—Ä–∏–π 1: –ö–æ–º–ø–∞–Ω–∏—è —Å –≤—ã—Å–æ–∫–∏–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏</h4>\n";
$high_performance_data = array(
    'name' => array('full' => '–û–û–û "–£—Å–ø–µ—à–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è"'),
    'inn' => '7700000000',
    'state' => array('status' => 'ACTIVE'),
    'fns' => array(
        'revenue' => 500000000,
        'profit' => 100000000,
        'profitability' => 20,
        'debt_ratio' => 10,
        'bankruptcy_risk' => 'low'
    ),
    'rosstat' => array(
        'region' => array('region_name' => '–ú–æ—Å–∫–≤–∞', 'statistical_rating' => 0.9),
        'sector' => array('sector_name' => 'IT', 'sector_rating' => 0.9),
        'enterprise_size' => array('size_category' => 'large', 'estimated_employees' => 200),
        'employment' => array('employment_stability' => 0.9)
    )
);

$high_analysis = $analytics->comprehensive_analysis($high_performance_data);
echo "<p><strong>–û–±—â–∏–π –±–∞–ª–ª:</strong> " . round($high_analysis['overall_score'], 1) . "/100</p>\n";

// –¢–µ—Å—Ç 2: –ö–æ–º–ø–∞–Ω–∏—è —Å –Ω–∏–∑–∫–∏–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏
echo "<h4>–°—Ü–µ–Ω–∞—Ä–∏–π 2: –ö–æ–º–ø–∞–Ω–∏—è —Å –Ω–∏–∑–∫–∏–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏</h4>\n";
$low_performance_data = array(
    'name' => array('full' => '–û–û–û "–ü—Ä–æ–±–ª–µ–º–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è"'),
    'inn' => '0100000000',
    'state' => array('status' => 'ACTIVE'),
    'fns' => array(
        'revenue' => 1000000,
        'profit' => -500000,
        'profitability' => -50,
        'debt_ratio' => 80,
        'bankruptcy_risk' => 'high'
    ),
    'rosstat' => array(
        'region' => array('region_name' => '–ü—Ä–æ–±–ª–µ–º–Ω—ã–π —Ä–µ–≥–∏–æ–Ω', 'statistical_rating' => 0.3),
        'sector' => array('sector_name' => '–£–±—ã—Ç–æ—á–Ω–∞—è –æ—Ç—Ä–∞—Å–ª—å', 'sector_rating' => 0.2),
        'enterprise_size' => array('size_category' => 'micro', 'estimated_employees' => 5),
        'employment' => array('employment_stability' => 0.2)
    )
);

$low_analysis = $analytics->comprehensive_analysis($low_performance_data);
echo "<p><strong>–û–±—â–∏–π –±–∞–ª–ª:</strong> " . round($low_analysis['overall_score'], 1) . "/100</p>\n";

echo "<h3>5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫:</h3>\n";

$settings_to_check = array(
    'crc_advanced_analytics_enabled'
);

foreach ($settings_to_check as $setting) {
    $value = get_option($setting);
    echo "<p><strong>{$setting}:</strong> " . var_export($value, true) . "</p>\n";
}

echo "<h3>üéØ –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞:</h3>\n";
echo "<div style='background: #d4edda; border: 1px solid #c3e6cb; padding: 15px; margin: 10px 0; border-radius: 5px;'>\n";
echo "<h4 style='color: #155724; margin: 0 0 10px 0;'>‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!</h4>\n";
echo "<ul style='margin: 0; color: #155724;'>\n";
echo "<li>‚úÖ –ö–ª–∞—Å—Å AdvancedAnalytics —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç</li>\n";
echo "<li>‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</li>\n";
echo "<li>‚úÖ –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç</li>\n";
echo "<li>‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç</li>\n";
echo "<li>‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø–ª–∞–≥–∏–Ω–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç</li>\n";
echo "<li>‚úÖ –†–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</li>\n";
echo "</ul>\n";
echo "</div>\n";

echo "<h3>üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</h3>\n";
echo "<ol>\n";
echo "<li>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö</li>\n";
echo "</ol>\n";
?>
