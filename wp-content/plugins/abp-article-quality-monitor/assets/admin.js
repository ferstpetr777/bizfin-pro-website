/**
 * ABP Article Quality Monitor - Admin JavaScript
 */

jQuery(document).ready(function($) {
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    $('.nav-tab').on('click', function(e) {
        e.preventDefault();
        
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
        $('.nav-tab').removeClass('nav-tab-active');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–µ
        $(this).addClass('nav-tab-active');
        
        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–æ–∫
        $('.abp-tab-content').hide();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
        var target = $(this).attr('href');
        $(target).show();
    });
    
    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ" –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
    $('#select-all-problem-posts').on('change', function() {
        var isChecked = $(this).is(':checked');
        $('#problem-posts .post-checkbox').prop('checked', isChecked);
    });
    
    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ" –¥–ª—è –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π
    $('#select-all-posts').on('change', function() {
        var isChecked = $(this).is(':checked');
        $('#all-posts .post-checkbox').prop('checked', isChecked);
    });
    
    // –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
    $('#abp-bulk-optimize').on('click', function(e) {
        e.preventDefault();
        
        var $button = $(this);
        var $progress = $('#abp-bulk-progress');
        
        $button.prop('disabled', true).text('–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è...');
        $progress.show();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
        $.ajax({
            url: abpQuality.ajaxUrl,
            type: 'POST',
            data: {
                action: 'abp_bulk_optimize',
                nonce: abpQuality.nonce
            },
            success: function(response) {
                if (response.success) {
                    const data = response.data;
                    const message = `–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${data.total_processed}, –£—Å–ø–µ—à–Ω–æ: ${data.success_count}, –û—à–∏–±–æ–∫: ${data.error_count}`;
                    showNotice('success', message);
                    updateProgress(100);
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                    setTimeout(function() {
                        location.reload();
                    }, 3000);
                } else {
                    showNotice('error', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: ' + (response.data || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
                }
            },
            error: function(xhr, status, error) {
                showNotice('error', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: ' + error);
            },
            complete: function() {
                $button.prop('disabled', false).text('üîß –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π');
                $progress.hide();
            }
        });
    });
    
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –∏–∑ –≤–∫–ª–∞–¥–∫–∏ "–í—Å–µ —Å—Ç–∞—Ç—å–∏"
    $('#abp-bulk-optimize-all').on('click', function(e) {
        e.preventDefault();
        
        var selectedPosts = [];
        $('#all-posts .post-checkbox:checked').each(function() {
            selectedPosts.push($(this).val());
        });
        
        if (selectedPosts.length === 0) {
            showNotice('warning', '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—å–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏');
            return;
        }
        
        var $button = $(this);
        var $progress = $('#abp-bulk-progress-all');
        
        $button.prop('disabled', true).text('–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è...');
        $progress.show();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–∏
        var completed = 0;
        var total = selectedPosts.length;
        
        selectedPosts.forEach(function(postId) {
            $.ajax({
                url: abpQuality.ajaxUrl,
                type: 'POST',
                data: {
                    action: 'abp_optimize_single',
                    post_id: postId,
                    nonce: abpQuality.nonce
                },
                success: function(response) {
                    completed++;
                    updateProgress((completed / total) * 100);
                    
                    if (completed === total) {
                        showNotice('success', `–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: ${total}`);
                        setTimeout(function() {
                            location.reload();
                        }, 2000);
                    }
                },
                error: function() {
                    completed++;
                    if (completed === total) {
                        showNotice('error', '–ü—Ä–æ–∏–∑–æ—à–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏');
                        setTimeout(function() {
                            location.reload();
                        }, 2000);
                    }
                }
            });
        });
    });
    
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç—å–∏ (–¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π)
        $(document).on('click', '.abp-optimize-single', function(e) {
            e.preventDefault();
            
            var $button = $(this);
            var postId = $button.data('post-id');
            var $row = $button.closest('tr');
        
        $button.prop('disabled', true).text('–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è...');
        $row.addClass('abp-loading');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        startProgressTracking(postId);
        
        console.log('ABP Quality Monitor: Starting AJAX request for post', postId);
        console.log('ABP Quality Monitor: AJAX URL:', abpQuality.ajaxUrl);
        console.log('ABP Quality Monitor: Nonce:', abpQuality.nonce);
        
        $.ajax({
            url: abpQuality.ajaxUrl,
            type: 'POST',
            data: {
                action: 'abp_optimize_single',
                post_id: postId,
                nonce: abpQuality.nonce
            },
            success: function(response) {
                console.log('ABP Quality Monitor: AJAX success response:', response);
                stopProgressTracking(postId);
                
                if (response.success) {
                    console.log('ABP Quality Monitor: Optimization successful for post', postId);
                    showNotice('success', '–°—Ç–∞—Ç—å—è ID ' + postId + ' —É—Å–ø–µ—à–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Ç–∞–±–ª–∏—Ü—ã —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                    updateTableRow(postId, response.data.quality_data);
                    
                } else {
                    console.log('ABP Quality Monitor: Optimization failed for post', postId, response.data);
                    showNotice('error', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏ ID ' + postId + ': ' + (response.data || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
                    setProgressError(postId);
                }
            },
            error: function(xhr, status, error) {
                console.log('ABP Quality Monitor: AJAX error:', xhr, status, error);
                console.log('ABP Quality Monitor: Response text:', xhr.responseText);
                stopProgressTracking(postId);
                setProgressError(postId);
                showNotice('error', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —Å—Ç–∞—Ç—å–∏ ID ' + postId + ': ' + error);
            },
            complete: function() {
                $button.prop('disabled', false).text('–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å');
                $row.removeClass('abp-loading');
            }
        });
    });
    
    // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    setInterval(function() {
        updateStats();
    }, 30000);
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    function updateStats() {
        $.ajax({
            url: abpQuality.ajaxUrl,
            type: 'POST',
            data: {
                action: 'abp_get_quality_stats',
                nonce: abpQuality.nonce
            },
            success: function(response) {
                if (response.success) {
                    updateStatsDisplay(response.data);
                }
            },
            error: function(xhr, status, error) {
                console.log('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
            }
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    function updateStatsDisplay(stats) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —á–∏—Å–ª–∞ –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö
        $('.abp-stat-number').each(function() {
            var $this = $(this);
            var cardType = $this.closest('.abp-stat-card').find('h3').text().toLowerCase();
            
            switch(cardType) {
                case '–≤—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π':
                    $this.text(stats.total_posts);
                    break;
                case '–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ':
                    $this.text(stats.quality_posts);
                    $this.next('.abp-stat-percent').text(stats.quality_percent + '%');
                    break;
                case '—Ç—Ä–µ–±—É—é—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏':
                    $this.text(stats.problem_posts);
                    $this.next('.abp-stat-percent').text(stats.problem_percent + '%');
                    break;
                case 'ai-–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω—ã':
                    $this.text(stats.ai_categorized);
                    $this.next('.abp-stat-percent').text(stats.ai_percent + '%');
                    break;
            }
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        $('.abp-stats-table tbody tr').each(function() {
            var $row = $(this);
            var criterion = $row.find('td:first').text();
            
            switch(criterion) {
                case 'AI-–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è':
                    $row.find('td:eq(2)').text(stats.ai_categorized);
                    $row.find('td:eq(3)').text(stats.ai_missing);
                    $row.find('td:eq(4)').text(stats.ai_percent + '%');
                    break;
                case 'SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è':
                    $row.find('td:eq(2)').text(stats.seo_optimized);
                    $row.find('td:eq(3)').text(stats.seo_missing);
                    $row.find('td:eq(4)').text(stats.seo_percent + '%');
                    break;
                case '–ê–ª—Ñ–∞–≤–∏—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞':
                    $row.find('td:eq(2)').text(stats.alphabet_correct);
                    $row.find('td:eq(3)').text(stats.alphabet_missing);
                    $row.find('td:eq(4)').text(stats.alphabet_percent + '%');
                    break;
            }
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    function updateProgress(percent) {
        $('.abp-progress-fill').css('width', percent + '%');
        $('.abp-progress-text').text('–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ' + percent + '%');
    }
    
    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    function showNotice(type, message) {
        console.log('ABP Quality Monitor: Showing notice:', type, message);
        
        var $notice = $('<div class="abp-notice abp-notice-' + type + '">' + message + '</div>');
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        $('.abp-notice').remove();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        var $dashboard = $('.abp-quality-dashboard');
        if ($dashboard.length === 0) {
            $dashboard = $('.wrap');
        }
        $dashboard.prepend($notice);
        
        console.log('ABP Quality Monitor: Notice added to page');
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(function() {
            $notice.fadeOut(500, function() {
                $(this).remove();
            });
        }, 5000);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö SEO –∫–æ–ª–æ–Ω–æ–∫
    function updateSeoColumns(row, qualityData) {
        console.log('ABP Quality Monitor: Updating SEO columns with data:', qualityData);
        
        // SEO Title (4-—è –∫–æ–ª–æ–Ω–∫–∞)
        const seoTitleCell = row.find('td:nth-child(4)');
        if (qualityData.seo_details && qualityData.seo_details.seo_title) {
            if (qualityData.seo_details.seo_title.status === 'ok') {
                seoTitleCell.html(`<span class="abp-status-ok" title="${qualityData.seo_details.seo_title.value}">‚úÖ</span>`);
            } else {
                seoTitleCell.html('<span class="abp-status-missing" title="–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç SEO title">‚ùå</span>');
            }
        }
        
        // Meta Description (5-—è –∫–æ–ª–æ–Ω–∫–∞)
        const metaDescCell = row.find('td:nth-child(5)');
        if (qualityData.seo_details && qualityData.seo_details.meta_desc) {
            if (qualityData.seo_details.meta_desc.status === 'ok') {
                const shortDesc = qualityData.seo_details.meta_desc.value.substring(0, 50) + '...';
                metaDescCell.html(`<span class="abp-status-ok" title="${shortDesc}">‚úÖ</span>`);
            } else {
                metaDescCell.html('<span class="abp-status-missing" title="–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç meta description">‚ùå</span>');
            }
        }
        
        // Focus Keyword (6-—è –∫–æ–ª–æ–Ω–∫–∞)
        const focusKwCell = row.find('td:nth-child(6)');
        if (qualityData.seo_details && qualityData.seo_details.focus_kw) {
            if (qualityData.seo_details.focus_kw.status === 'ok') {
                focusKwCell.html(`<span class="abp-status-ok" title="${qualityData.seo_details.focus_kw.value}">‚úÖ</span>`);
            } else {
                focusKwCell.html('<span class="abp-status-missing" title="–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç focus keyword">‚ùå</span>');
            }
        }
        
        // Canonical URL (7-—è –∫–æ–ª–æ–Ω–∫–∞)
        const canonicalCell = row.find('td:nth-child(7)');
        if (qualityData.seo_details && qualityData.seo_details.canonical) {
            if (qualityData.seo_details.canonical.status === 'ok') {
                canonicalCell.html(`<span class="abp-status-ok" title="${qualityData.seo_details.canonical.value}">‚úÖ</span>`);
            } else {
                canonicalCell.html('<span class="abp-status-missing" title="–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç canonical URL">‚ùå</span>');
            }
        }
        
        // Meta Description Keyword Match (8-—è –∫–æ–ª–æ–Ω–∫–∞)
        const metaDescKwCell = row.find('td:nth-child(8)');
        if (qualityData.meta_desc_keyword_status) {
            if (qualityData.meta_desc_keyword_status === 'ok') {
                metaDescKwCell.html('<span class="abp-status-ok" title="Meta Description –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞">‚úÖ</span>');
            } else {
                metaDescKwCell.html('<span class="abp-status-missing" title="Meta Description –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞">‚ùå</span>');
            }
        }
        
        // Title Keyword Match (9-—è –∫–æ–ª–æ–Ω–∫–∞)
        const titleKwCell = row.find('td:nth-child(9)');
        if (qualityData.title_keyword_match_status) {
            if (qualityData.title_keyword_match_status === 'ok') {
                titleKwCell.html('<span class="abp-status-ok" title="–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É">‚úÖ</span>');
            } else {
                titleKwCell.html('<span class="abp-status-missing" title="–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É">‚ùå</span>');
            }
        }
        
        console.log('ABP Quality Monitor: SEO columns updated');
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–æ–∫
    function createHistoryChart() {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —Å –ø–æ–º–æ—â—å—é Chart.js –∏–ª–∏ –¥—Ä—É–≥–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
        var $chartContainer = $('#abp-history-chart');
        
        // –ü–æ–∫–∞ —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        $chartContainer.html('<p>üìä –ì—Ä–∞—Ñ–∏–∫ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–æ–∫ –±—É–¥–µ—Ç –∑–¥–µ—Å—å</p><p><em>–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</em></p>');
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    createHistoryChart();
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ AJAX
    $(document).ajaxError(function(event, xhr, settings, thrownError) {
        if (settings.url.indexOf('abp_') !== -1) {
            showNotice('error', '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
        }
    });
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π (—É–¥–∞–ª–µ–Ω–æ - —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ)
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –≤—Å–µ—Ö AJAX –∑–∞–ø—Ä–æ—Å–æ–≤
    $(document).ajaxStart(function() {
        $('body').addClass('abp-loading');
    }).ajaxStop(function() {
        $('body').removeClass('abp-loading');
    });
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    function exportStats() {
        var stats = {
            timestamp: new Date().toISOString(),
            total_posts: $('.abp-stat-card:first .abp-stat-number').text(),
            quality_posts: $('.abp-stat-card:nth-child(2) .abp-stat-number').text(),
            problem_posts: $('.abp-stat-card:nth-child(3) .abp-stat-number').text(),
            ai_categorized: $('.abp-stat-card:nth-child(4) .abp-stat-number').text()
        };
        
        var dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(stats, null, 2));
        var downloadAnchorNode = document.createElement('a');
        downloadAnchorNode.setAttribute("href", dataStr);
        downloadAnchorNode.setAttribute("download", "abp-quality-stats-" + new Date().toISOString().split('T')[0] + ".json");
        document.body.appendChild(downloadAnchorNode);
        downloadAnchorNode.click();
        downloadAnchorNode.remove();
        
        showNotice('success', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞!');
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —ç–∫—Å–ø–æ—Ä—Ç–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    if ($('#abp-export-stats').length === 0) {
        $('.abp-detailed-stats h2').after('<button id="abp-export-stats" class="button button-secondary">üìä –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</button>');
        $('#abp-export-stats').on('click', exportStats);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
    function filterProblemPosts(filter) {
        var $rows = $('.abp-problem-posts tbody tr');
        
        $rows.each(function() {
            var $row = $(this);
            var issues = $row.find('td:nth-child(6)').text().toLowerCase();
            
            if (filter === 'all' || issues.indexOf(filter) !== -1) {
                $row.show();
            } else {
                $row.hide();
            }
        });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    if ($('#abp-filter-controls').length === 0 && $('.abp-problem-posts tbody tr').length > 0) {
        var filterHtml = '<div id="abp-filter-controls" style="margin: 10px 0;">' +
            '<label for="abp-issue-filter">–§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–æ–±–ª–µ–º–∞–º: </label>' +
            '<select id="abp-issue-filter">' +
            '<option value="all">–í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã</option>' +
            '<option value="ai">AI-–∫–∞—Ç–µ–≥–æ—Ä–∏—è</option>' +
            '<option value="seo">SEO</option>' +
            '<option value="–∞–ª—Ñ–∞–≤–∏—Ç">–ê–ª—Ñ–∞–≤–∏—Ç</option>' +
            '</select>' +
            '</div>';
        
        $('.abp-problem-posts h2').after(filterHtml);
        
        $('#abp-issue-filter').on('change', function() {
            filterProblemPosts($(this).val());
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ç–µ–π
    function toggleSelectAll() {
        var $checkboxes = $('.abp-post-checkbox');
        var $selectAllCheckbox = $('#abp-select-all');
        
        if ($selectAllCheckbox.prop('checked')) {
            $checkboxes.prop('checked', true);
        } else {
            $checkboxes.prop('checked', false);
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫–±–æ–∫—Å—ã –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    if ($('.abp-problem-posts tbody tr').length > 0 && $('.abp-post-checkbox').length === 0) {
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å —á–µ–∫–±–æ–∫—Å–æ–º
        $('.abp-problem-posts thead th:first').html('<input type="checkbox" id="abp-select-all">');
        
        // –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫–±–æ–∫—Å—ã –∫ —Å—Ç—Ä–æ–∫–∞–º
        $('.abp-problem-posts tbody tr').each(function() {
            $(this).find('td:first').html('<input type="checkbox" class="abp-post-checkbox" value="' + $(this).find('td:first').text() + '"> ' + $(this).find('td:first').text());
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö
        $('#abp-select-all').on('change', toggleSelectAll);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
    function optimizeSelected() {
        var selectedIds = [];
        $('.abp-post-checkbox:checked').each(function() {
            selectedIds.push($(this).val());
        });
        
        if (selectedIds.length === 0) {
            showNotice('error', '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—å–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏');
            return;
        }
        
        if (!confirm('–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ (' + selectedIds.length + ' —à—Ç.)?')) {
            return;
        }
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å AJAX –∑–∞–ø—Ä–æ—Å –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        showNotice('info', '–ú–∞—Å—Å–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –º–∞—Å—Å–æ–≤–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å —á–µ–∫–±–æ–∫—Å—ã)
    if ($('.abp-post-checkbox').length > 0 && $('#abp-optimize-selected').length === 0) {
        $('.abp-bulk-actions').append('<button id="abp-optimize-selected" class="button button-secondary">–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ</button>');
        $('#abp-optimize-selected').on('click', optimizeSelected);
    }
    
    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    let progressTimers = {};
    
    function startProgressTracking(postId) {
        console.log('ABP Quality Monitor: Starting progress tracking for post', postId);
        
        const progressIndicator = $(`.abp-progress-indicator[data-post-id="${postId}"]`);
        const progressText = progressIndicator.find('.abp-progress-text');
        
        console.log('ABP Quality Monitor: Progress indicator found:', progressIndicator.length);
        console.log('ABP Quality Monitor: Progress text found:', progressText.length);
        
        if (progressIndicator.length === 0) {
            console.log('ABP Quality Monitor: Progress indicator not found for post', postId);
            return;
        }
        
        progressText.removeClass('abp-progress-success abp-progress-error').addClass('abp-progress-active');
        progressText.text('0—Å');
        
        let seconds = 0;
        progressTimers[postId] = setInterval(function() {
            seconds++;
            progressText.text(seconds + '—Å');
        }, 1000);
        
        console.log('ABP Quality Monitor: Progress tracking started for post', postId);
    }
    
    function stopProgressTracking(postId) {
        console.log('ABP Quality Monitor: Stopping progress tracking for post', postId);
        
        if (progressTimers[postId]) {
            clearInterval(progressTimers[postId]);
            delete progressTimers[postId];
        }
        
        const progressIndicator = $(`.abp-progress-indicator[data-post-id="${postId}"]`);
        const progressText = progressIndicator.find('.abp-progress-text');
        
        console.log('ABP Quality Monitor: Progress indicator found for stop:', progressIndicator.length);
        
        if (progressIndicator.length > 0) {
            progressText.removeClass('abp-progress-active').addClass('abp-progress-success');
            progressText.text('‚úì');
            
            // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
            setTimeout(function() {
                progressText.removeClass('abp-progress-success').text('‚Äî');
            }, 3000);
        }
    }
    
    function setProgressError(postId) {
        if (progressTimers[postId]) {
            clearInterval(progressTimers[postId]);
            delete progressTimers[postId];
        }
        
        const progressIndicator = $(`.abp-progress-indicator[data-post-id="${postId}"]`);
        const progressText = progressIndicator.find('.abp-progress-text');
        
        progressText.removeClass('abp-progress-active').addClass('abp-progress-error');
        progressText.text('‚úó');
        
        // –ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
        setTimeout(function() {
            progressText.removeClass('abp-progress-error').text('‚Äî');
        }, 5000);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    function updateTableRow(postId, qualityData) {
        console.log('ABP Quality Monitor: Updating table row for post', postId, qualityData);
        
        const row = $(`tr:has(.abp-optimize-single[data-post-id="${postId}"])`);
        console.log('ABP Quality Monitor: Found row:', row.length);
        
        if (row.length === 0) {
            console.log('ABP Quality Monitor: Row not found for post', postId);
            return;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã AI-–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const aiCell = row.find('td:nth-child(3)');
        console.log('ABP Quality Monitor: AI status:', qualityData.ai_category_status);
        console.log('ABP Quality Monitor: AI cell found:', aiCell.length);
        if (qualityData.ai_category_status === 'ok') {
            aiCell.html('<span class="abp-status-ok">‚úÖ</span>');
            console.log('ABP Quality Monitor: AI status updated to OK');
        } else {
            aiCell.html('<span class="abp-status-missing">‚ùå</span>');
            console.log('ABP Quality Monitor: AI status updated to MISSING');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ SEO —Å—Ç–∞—Ç—É—Å—ã
        updateSeoColumns(row, qualityData);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –∞–ª—Ñ–∞–≤–∏—Ç–∞ (—Ç–µ–ø–µ—Ä—å 10-—è –∫–æ–ª–æ–Ω–∫–∞)
        const alphabetCell = row.find('td:nth-child(10)');
        console.log('ABP Quality Monitor: Alphabet status:', qualityData.alphabet_system_status);
        console.log('ABP Quality Monitor: Alphabet cell found:', alphabetCell.length);
        if (qualityData.alphabet_system_status === 'ok') {
            alphabetCell.html('<span class="abp-status-ok">‚úÖ</span>');
            console.log('ABP Quality Monitor: Alphabet status updated to OK');
        } else {
            alphabetCell.html('<span class="abp-status-missing">‚ùå</span>');
            console.log('ABP Quality Monitor: Alphabet status updated to MISSING');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã (—Ç–µ–ø–µ—Ä—å 11-—è –∫–æ–ª–æ–Ω–∫–∞)
        const issuesCell = row.find('td:nth-child(11)');
        console.log('ABP Quality Monitor: Issues cell found:', issuesCell.length);
        console.log('ABP Quality Monitor: Issues text:', qualityData.issues);
        issuesCell.text(qualityData.issues || '–ù–µ—Ç –ø—Ä–æ–±–ª–µ–º');
        console.log('ABP Quality Monitor: Issues cell updated');
        
        // –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —Ä–µ—à–µ–Ω—ã, —Å–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É
        if (qualityData.overall_status === 'ok') {
            row.addClass('abp-optimized');
            setTimeout(function() {
                row.fadeOut(500, function() {
                    $(this).remove();
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
                    updateProblemCount();
                });
            }, 2000);
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
    function updateProblemCount() {
        const remainingRows = $('.abp-problem-posts tbody tr').length;
        const headerText = $('.abp-problem-posts h2').text();
        const newText = headerText.replace(/\(\d+\)/, `(${remainingRows})`);
        $('.abp-problem-posts h2').text(newText);
        
        // –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (remainingRows === 0) {
            $('.abp-problem-posts').html(`
                <div class="abp-no-problems">
                    <h2>üéâ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ —Å—Ç–∞—Ç—å–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã</h2>
                    <p>–£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–∞—Ç–µ–π, —Ç—Ä–µ–±—É—é—â–∏—Ö –¥–æ—Ä–∞–±–æ—Ç–∫–∏.</p>
                </div>
            `);
        }
    }
    
    console.log('ABP Article Quality Monitor admin script loaded successfully');
});



